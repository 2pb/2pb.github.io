<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Online platform architecture redesigning</title>
      <link href="/2020/05/11/online-platform-architecture-redesigning/"/>
      <url>/2020/05/11/online-platform-architecture-redesigning/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue May 12 2020 17:15:24 GMT-0700 (Pacific Daylight Time) --><h1 id="start-from-built"><a class="markdownIt-Anchor" href="#start-from-built"></a> Start from built</h1><p>Several years ago, I have designed and implemented <a href="https://github.com/rzweb-ryan/online-shopping-platform-C2C-Distributed-System" target="_blank" rel="external nofollow noopener noreferrer">a distributed online shopping plaform</a>. It’s a traditional SpringMVC-Spring-Mybatis distributed services, deployed in AWS EC2, with some extra techological selections. Although the architecture design looks reasonable at the time it was designed, as now the data and business exploses, as well as some cutting-edge technologies come out. It’s a good time to learn and introduce those must-have sources to the “old fasion” system.</p><p>The initial design looks like:<br><br></p><div align="center"><img src="/img/shopping-platform.png" alt="initial design" style="width:400px;height:550px"></div><br><center><b>online platform initial design</b></center><br><h2 id="pros"><a class="markdownIt-Anchor" href="#pros"></a> Pros</h2><p>The initial design has 5 distributed services running as clusters, they are WEB, SSO, ORDER, SEARCH and backend data MANAGEMENT. As a classic MVC system, it tries some technologies to handle High-Available(HA) scenario:</p><ul><li>a NGINX based LB will work as port-forwarding when user traffic comes from the frontend.</li><li>an open source search engine Lucene/Solr is built to handle fussy query.</li><li>a cluster of redis is used as SSO storage and context wide cache system.</li><li>A splitting of read/write on Mysql db is also implemented to handle huge user traffic.</li></ul><h2 id="cons"><a class="markdownIt-Anchor" href="#cons"></a> Cons</h2><ul><li>Overkilled distributed systems. The deploy and develo process is somewhat complicated.</li><li>Local disk based file handling mechanism.</li><li>Log collection is not implementd.</li><li>Centrolized Mysql cluster.</li><li>Lack of transaction consistency as distributed lock is not well implementd.</li></ul><h1 id="optimization"><a class="markdownIt-Anchor" href="#optimization"></a> Optimization</h1><p>Based on the current cons and new cutting-edge techs, several optimization I will try to cover in the future work:</p><ol><li>Micro service. SpringCloud/SpringBoot.</li><li>Container deployment. Docker/K8s.</li><li>Distributed lock implementation.</li><li>Log collection. Kafka.</li><li>Distributed File System. fastdfs</li><li>Sharding. Mycat</li><li>Other optimizations.</li></ol><p><b>A new architecture will look like:</b><br><br></p><div align="center"><img src="/img/shopping-platform-revised.png" alt="initial design" style="width:650px;height:550px"></div><br><center><b>online platform revised design</b></center><br><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Architecture </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Backend </tag>
            
            <tag> Design </tag>
            
            <tag> Optimization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First Blog</title>
      <link href="/2020/05/10/first-blog/"/>
      <url>/2020/05/10/first-blog/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue May 12 2020 17:15:24 GMT-0700 (Pacific Daylight Time) --><p>Hello world!</p><p>I created this brand new blog for a new learning session.</p><p>This has been my fourth year of being a software engineer in US. I’ve learned great things from the experience in Amazon and Google. However, sometimes I feel it’s harder to keep improving myself as time accumulates. Now is the time to make a change! Stay hungry, stay foolish.</p><img src="/img/architect.jpg" alt="architect" style="width:400px;height:550px"><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
